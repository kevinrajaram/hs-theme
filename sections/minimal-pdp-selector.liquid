{% comment %}
-------------------------------------------------------------------------------
Minimal pdp selector
-------------------------------------------------------------------------------
Usage
{% section 'minimal-pdp-selector' %}
-------------------------------------------------------------------------------
{% endcomment %}

{% liquid
  assign id = '#shopify-section-' | append: section.id
  assign product_form_id = 'wayfx-product-form-' | append: section.id
  assign current_variant = product.selected_or_first_available_variant | default: product.variants.first
  assign subscription_product = product.metafields.subscriptions
  assign subscription_variant_id = product.selected_or_first_available_variant.metafields.subscriptions.discount_variant_id
  assign discount_percentage = subscription_product.discount_percentage | round: 2
  assign discount_floor = subscription_product.discount_percentage | floor

  if discount_percentage == discount_floor
    assign discount_percentage = discount_floor
  endif

  assign plan_id = current_variant.selling_plan_allocations[0].selling_plan.id
  assign plan_percentage = current_variant.selling_plan_allocations[0].selling_plan.price_adjustments[0].value
  assign plan_percentage_decimal = plan_percentage | times: 1.0 | divided_by: 100
  assign plan_discount = current_variant.price | times: plan_percentage_decimal
  assign plan_price = current_variant.price | minus: plan_discount
  assign selected_plan_discount = current_variant.price | times: plan_percentage_decimal
  assign selected_plan_price = current_variant.price | minus: selected_plan_discount

  assign sold_out = true
  if current_variant.available
    assign sold_out = false
  endif

  assign includes = product.metafields.rtnu.stack_includes | metafield_tag
  assign productImage = section.settings.image
%}

<section class="rtnu-minimal-selector">
  <div class="rtnu-wrapper">
    <div class="rtnu-grid">
      <div class="rtnu-grid__item">
        <h2>{{ product.title }}</h2>
        {{ includes }}

        {%- form 'product',
          product,
          data-productid: product.id,
          id: product_form_id,
          class: 'GrowAOV-Form rtnu-minimal-selector__form',
          novalidate: 'novalidate',
          data-type: 'add-to-cart-form'
        -%}
          <input
            type="hidden"
            name="id"
            data-productid="{{ product.id }}"
            value="{{ product.selected_or_first_available_variant.id }}"
          >
          <input type="hidden" name="selling_plan" id="{{ product_form_id }}-sellingPlan" value="{{ plan_id }}">
          <input type="hidden" name="quantity" value="1">
          {% comment %} Custom attribute for Stacks {% endcomment %}
          <input type="hidden" name="attributes[stack]" value="true">

          <div class="rtnu-product__form-purchase-type">
            <label for="type" class="rtnu-product__form-item-label visually-hidden">Purchase type</label>

            <fieldset class="rtnu-single-option" name="type" id="{{ product_form_id }}-ProductSelect-option-1">
              <div class="rtnu-single-option-radio__group">
                <div class="rtnu-custom-radio rtnu-custom-radio--active">
                  <input
                    type="radio"
                    value="{{ plan_id }}"
                    name="{{ product_form_id }}-main-subscription"
                    class="rtnu-single-option-selector__radio rtnu-single-option--purchaseType rtnu-single-option--purchaseType-subscription"
                    id="{{ product_form_id }}-purchaseType--subscription"
                    checked
                    aria-checked="true"
                  >
                  <label
                    for="{{ product_form_id }}-purchaseType--subscription"
                    class="purchaseType-subscription purchaseType-active"
                  >
                    <p>
                      <span
                        >Subscribe &amp;&nbsp;<span class="purchaseType-subscription__savings"
                          >Save <span class="rtnu-subscription-savings">10%</span></span
                        ></span
                      >
                    </p>
                    <div class="rtnu-single-option__price rtnu-single-option__price--subscription">
                      {%- if routes.root_url == '/' -%}
                        <div>{{ selected_plan_price | money }}</div>
                      {%- else -%}
                        <div>{{ selected_plan_price | money_with_currency }}</div>
                      {%- endif -%}
                    </div>
                  </label>

                  <div class="rtnu-single-option-selector__dropdown">
                    <div class="rtnu-product__form-item-label">Delivers</div>
                    <div class="rtnu-single-option-selector__select">
                      <select id="{{ product_form_id }}-sellingPlanOptions">
                        {%- for allocation in current_variant.selling_plan_allocations -%}
                          <option value="{{ allocation.selling_plan.id }}">
                            {{ allocation.selling_plan.name | replace: 'Delivers every', 'Every' }}
                          </option>
                        {%- endfor -%}
                      </select>
                    </div>
                  </div>
                </div>

                <div class="rtnu-custom-radio">
                  <input
                    type="radio"
                    value="{{ product.selected_or_first_available_variant.id }}"
                    name="{{ product_form_id }}-main-subscription"
                    class="rtnu-single-option-selector__radio rtnu-single-option--purchaseType rtnu-single-option--purchaseType-one-time"
                    id="{{ product_form_id }}-purchaseType--one-time"
                    aria-checked="false"
                  >
                  <label for="{{ product_form_id }}-purchaseType--one-time" class="purchaseType-one-time">
                    <p>Buy Once</p>
                    <div class="rtnu-single-option__price rtnu-single-option__price--onetime">
                      {%- if routes.root_url == '/' -%}
                        <div>{{ product.price | money_without_trailing_zeros }}</div>
                      {%- else -%}
                        <div>{{ product.price | money_with_currency }}</div>
                      {%- endif -%}
                    </div>
                  </label>
                </div>
              </div>
            </fieldset>
          </div>

          <button type="submit" class="rtnu-minimal-selector__form-submit wayfx-btn">Add Stack to Cart</button>
        {%- endform -%}

        <div class="rtnu-shipping">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="16" viewBox="0 0 20 16">
            <path fill="#8f5121" d="M19.5 11H19V7.6a1.5 1.5 0 0 0-.4-1l-3.2-3.2a1.5 1.5 0 0 0-1-.4H13V1.5A1.5 1.5 0 0 0 11.5 0h-8A1.5 1.5 0 0 0 2 1.5V3H.2a.3.3 0 0 0-.2.3v.5a.3.3 0 0 0 .3.2h8.4a.3.3 0 0 1 .3.3v.5a.3.3 0 0 1-.3.2H1.3a.3.3 0 0 0-.3.3v.5a.3.3 0 0 0 .3.2h6.5a.3.3 0 0 1 .2.3v.5a.3.3 0 0 1-.3.2H.3a.3.3 0 0 0-.2.3v.5a.3.3 0 0 0 .3.2h6.5a.3.3 0 0 1 .2.3v.4a.3.3 0 0 1-.3.3H2v4a3 3 0 0 0 6 0h4a3 3 0 0 0 6 0h1.5a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5ZM5 14.5A1.5 1.5 0 1 1 6.5 13 1.5 1.5 0 0 1 5 14.5Zm10 0a1.5 1.5 0 1 1 1.5-1.5 1.5 1.5 0 0 1-1.5 1.5ZM17.5 8H13V4.5h1.4l3.1 3.1Z" data-name="Icon awesome-shipping-fast"/>
          </svg>
          <p>Free U.S. shipping over $80</p>
        </div>
      </div>
      <div class="rtnu-grid__item">
        {% if productImage != blank %}
        {{ productImage | image_url: width: 1200 | image_tag: class: 'rtnu-minimal-selector__image' }}
        {% else %}
        {{ 'image' | placeholder_svg_tag }}
        {% endif %}
      </div>
    </div>
  </div>
</section>

<script>
  window.addEventListener('DOMContentLoaded', (e) => {
    let productForm = document.querySelector('#{{ product_form_id }}'),
        currentVariantPrice = '{{ current_variant.price | money_without_trailing_zeros }}',
        shippingFrequencyDropdown = productForm?.querySelector('.rtnu-single-option-selector__dropdown'),
        productVariantsOptions = productForm?.querySelectorAll('.rtnu-product__variants .rtnu-option'),
        subscriptionPrice = productForm?.querySelector('.rtnu-single-option__price--subscription'),
        onetimePrice = productForm?.querySelector('.rtnu-single-option__price--onetime div'),
        sellingPlan = productForm?.querySelector('#{{ product_form_id }}-sellingPlan'),
        productId = productForm?.querySelector('[name="id"]'),
        sellingPlanOptions = productForm?.querySelector('#{{ product_form_id }}-sellingPlanOptions'),
        purchaseSelectorLabel = productForm?.querySelectorAll('#{{ product_form_id }}-ProductSelect-option-1 label'),
        addToCartBtn = document.querySelector('.rtnu-minimal-selector__form-submit');

    // handle purchase type
    if (typeof purchaseSelectorLabel !== undefined && purchaseSelectorLabel !== null) {
      purchaseSelectorLabel?.forEach(label => {
        let labelParent = label.parentNode;

        if (typeof productVariantsOptions !== undefined && productVariantsOptions !== null) {
          productVariantsOptions?.forEach(variant => {
            let variant_raw_price = variant.querySelector("input[type='radio']").dataset.priceRaw,
                variant_raw_sub_price = variant.querySelector("input[type='radio']").dataset.subPriceRaw,
                item_count = variant.querySelector("input[type='radio']").dataset.itemCount,
                single_item_price = variant.querySelector(".rtnu-product__form-item-single-cost-price");

            // set single item price on load
            if(labelParent.classList.contains('rtnu-custom-radio--active') && single_item_price !== null && item_count) {
              if (label.classList.contains('purchaseType-subscription')) {
                single_item_price.innerHTML = "{{ cart.currency.symbol }}" + (variant_raw_sub_price / item_count).toFixed(2);
              } else {
                single_item_price.innerHTML = "{{ cart.currency.symbol }}" + (variant_raw_price / item_count).toFixed(2);
              }
            }
          });
        }


        label.addEventListener('click', (e) => {
          let is_subscription;
          //remove active class from all purchase selector labels and add to clicked label
          purchaseSelectorLabel?.forEach(i => {
            i.parentNode.classList.remove('rtnu-custom-radio--active');
            i.parentNode.querySelector('label').classList.remove('purchaseType-active');
            i.parentNode.querySelector('input').checked = false;
            i.parentNode.querySelector('input').setAttribute('aria-checked', 'false');
          });

          labelParent.classList.add('rtnu-custom-radio--active');
          labelParent.querySelector('label').classList.add('purchaseType-active');
          labelParent.querySelector('input').checked = true;
          labelParent.querySelector('input').setAttribute('aria-checked', 'true');

          if (label.classList.contains('purchaseType-subscription')){
            is_subscription = true;
          } else {
            is_subscription = false;
          }

          if(is_subscription) {
            shippingFrequencyDropdown.classList.remove('rtnu-hide');
            sellingPlan.setAttribute('name', 'selling_plan');
          } else {
            shippingFrequencyDropdown.classList.add('rtnu-hide');
            sellingPlan.setAttribute('name', '');
          }
        });
      });
    }

    // handle shipping frequency selection
    if (typeof sellingPlanOptions !== undefined && sellingPlanOptions !== null) {
      sellingPlanOptions?.addEventListener('change', (e) => {
        let shipping_frequency = e.target.value;
        sellingPlan.value = shipping_frequency;
      });
    }
  });
</script>

{% schema %}
{
  "name": "Minimal PDP Selector",
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    }
  ],
  "presets": [
    {
      "name": "Minimal PDP Selector"
    }
  ]
}
{% endschema %}